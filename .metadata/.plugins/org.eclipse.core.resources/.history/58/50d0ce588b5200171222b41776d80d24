import java.util.HashMap;

public class TwoSum {
	/*
	 * Given an array of integers, return indices of the two numbers such that
	 * they add up to a specific target. You may assume that each input would
	 * have exactly one solution, and you may not use the same element twice.
	 * https://leetcode.com/problems/two-sum/#/description
	 */
	public static void main(String args[]) {
		int[] input = { -3, 4, 3, 90 };
		System.out.println(twoSum(input, 9));
	}

	public static int[] twoSum(int[] nums, int target) {
		HashMap<Integer, Integer> indexToInt = new HashMap<Integer, Integer>();
		for (int i = 0; i < nums.length; i++) {

			int difference = target - Math.abs(nums[i]);
			System.out.println(difference);
			if (indexToInt.containsKey(difference)) {
				int index = indexToInt.get(difference);
				int[] result = { index, i };
				return result;
			} else {
				indexToInt.put(nums[i], i);
			}

		}
		return null;
	}
}
