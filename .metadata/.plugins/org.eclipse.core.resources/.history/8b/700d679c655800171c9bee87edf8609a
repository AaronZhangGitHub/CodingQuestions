
public class RemoveDuplicatesSortedArray {
	/*
	 * Given a sorted array, remove the duplicates in place such that each
	 * element appear only once and return the new length.
	 * 
	 * Do not allocate extra space for another array, you must do this in place
	 * with constant memory.
	 * 
	 * For example, Given input array nums = [1,1,2],
	 * 
	 * Your function should return length = 2, with the first two elements of
	 * nums being 1 and 2 respectively. It doesn't matter what you leave beyond
	 * the new length.
	 */
	public static void main(String args[]) {
		int[] nums = { 1,1 };
		System.out.println(removeDuplicates(nums));
	}

	public static int removeDuplicates(int[] nums) {
		int numberRemoved = 0;
		if (nums == null||nums.length==0) {
			return 0;
		} else if (nums.length == 1) {
			return 1;
		}

		int temp = nums[0];
		for (int i = 1; i < nums.length; i++) {
			System.out.println(temp+" "+nums[i]+" "+nums.length);
			if (temp == nums[i] && i + 1 < nums.length) {
				if (i + 1 < nums.length) {
					// remove nums[i]
					nums[i] = nums[i + 1];
					temp = nums[i];
					numberRemoved += 1;
				}else{
					//last change
					System.out.println(i);
					numberRemoved+=1;
				}
			} else {
				temp = nums[i];
			}
		}

		return nums.length - numberRemoved;
	}
}
